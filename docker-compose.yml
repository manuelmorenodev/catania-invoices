version: "3.8"

services:

  postgres:
    image: postgres:13.5
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - .docker/pg:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 20

  hasura:
    image: hasura/graphql-engine:v2.1.1
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${HASURA_PORT:-8080}:8080"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD:-postgres}@postgres:5432/postgres
      HASURA_GRAPHQL_ADMIN_SECRET: "${HASURA_ADMIN_SECRET:-hasura}"
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS256", "key": "${HASURA_JWT_SECRET:-h2leOvdgjwpV0As5L8rZlV3VDVOsOmwk}"}'
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "admin"
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DEV_MODE: "true"

  app:
    build:
      context: app
    ports:
      - 80:3000 # browser
      - 3000:3000 # live reload
    volumes:
      - ./app:/app:delegate

  api:
    build:
      context: api
    ports:
      - 4000:4000
    volumes:
      - ./api/src:/usr/src/app/src:delegated
    environment:
      - HASURA_ENDPOINT=http://hasura:8080/v1/graphql
      - FASTIFY_PORT=4000